openapi: 3.0.2
info:
  title: User Service - Backend API
  description: API documentation for User Service
  version: 0.0.1
servers:
  - url: https://{hostname}
    variables:
      hostname:
        default: localhost
        description: Local server
security:
  - bearerAuth: []
paths:
  /api/v1/health:
    get:
      tags:
        - Healthcheck
      description: Liveness probe
      responses:
        '200':
          description: Success
        '500':
          description: Internal server error
  /api/v1/users:
    post:
      tags:
        - User
      operationId: createUser
      description: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateParams'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/users/{id}:
    parameters:
      - name: id
        in: path
        description: Unique user identifier
        required: true
        schema:
          type: integer
          format: int64
          example: 123456789
    get:
      tags:
        - Users
      operationId: getUser
      description: Get user by ID
      responses:
        '404':
          description: User not found
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - Users
      operationId: updateUser
      description: Edit user info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateParams'
      responses:
        '404':
          description: User not found
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - Users
      operationId: deleteUser
      description: Delete user by ID
      responses:
        '404':
          description: User not found
        '204':
          description: Success

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456789
        first_name:
          type: string
          example: "John"
        last_name:
          type: string
          example: "Doe"
        phone_number:
          type: string
          example: "+1234567890"
        address:
          type: string
          example: "Springfield, 111 Avocado St."
      required: [id, first_name, last_name, phone_number, address]
    UserCreateParams:
      type: object
      properties:
        first_name:
          type: string
          example: "John"
        last_name:
          type: string
          example: "Doe"
        phone_number:
          type: string
          example: "+1234567890"
        address:
          type: string
          example: "Springfield, 111 Avocado St."
      required: [first_name, last_name, phone_number, address]
    UserUpdateParams:
      type: object
      properties:
        first_name:
          type: string
          example: "Jack"
        last_name:
          type: string
          example: "Sparrow"
        phone_number:
          type: string
          example: "+0987654321"
        address:
          type: string
          example: "Sunnyvale, 333 Central Square"
